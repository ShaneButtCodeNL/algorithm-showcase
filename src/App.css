:root {
  --background-color: rgb(85, 85, 85);
  --default-color: rgb(233, 233, 233);

  --border-color: rgb(0, 0, 0);
  --block-color: rgb(160, 160, 160);
  --origin-color: rgb(16, 247, 8);
  --midway-color: rgb(94, 0, 138);
  --end-color: rgb(241, 9, 9);
  --wall-color: #000;
  --traveled-color: rgb(243, 229, 34);
  --checked-color: rgb(0, 174, 255);
  --path-color: rgb(255, 136, 0);
  --toolbar-font-color: rgb(255, 238, 0);

  --col-nums: 10;
  --row-nums: 10;
  --animation-time: 250ms;
  --block-size: 30px;
  --grid-gap: 3px;
  --block-font-size: 0.5em;
  --block-line-height: 1em;

  --search-node-size: 3ch;
}
@import url("https://fonts.googleapis.com/css2?family=Bebas+Neue&display=swap");
/**
General classes
**/
button:hover {
  cursor: pointer;
}
label {
  font-family: "Bebas Neue", cursive;
}
select {
  background-color: rgb(100, 100, 100);
  color: var(--toolbar-font-color);
  border: 2px solid;
  border-color: var(--toolbar-font-color);
  border-radius: 0.5em;
}
select option {
  background-color: var(--background-color);
}
/**
Main Page
**/
.App {
  background-color: var(--background-color);
  color: var(--default-color);
  height: 100vh;
  width: 100vw;
  display: flex;
  flex-direction: column;
  font-size: 1.2em;
  line-height: 1.3em;
}
.displayWindow {
  display: flex;
  flex: 1 1;
  overflow: hidden;
}
.titleBar {
  border-bottom: solid 1px;
}
.title {
  display: flex;
  flex-direction: column;
  margin-bottom: 0.1em;
  padding: 0.3em;
}
.problemSelectDiv {
  margin: auto 0.4em;
}
.problemSelectSelect {
  width: clamp(20ch, 20vw, 40ch);
  height: 3em;
}
/**
ToolBar
**/
.sideBar {
  display: flex;
  width: 20ch;
  height: 100%;
  flex-shrink: 0;
  transition: max-width 500ms ease-in;
  overflow-x: hidden;
}
.sideBarSlide {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  padding: 1em 1ch;
  border: 1px outset;
  border-color: rgba(0, 0, 0, 0.3);
}
.sideToolBar select {
  background-color: rgb(100, 100, 100);
}
.sideToolBar button,
input {
  background-color: rgba(0, 0, 0, 0);
  color: var(--toolbar-font-color);
  border: 2px solid;
  border-color: var(--toolbar-font-color);
  border-radius: 0.5em;
}
.sideToolBar {
  color: var(--toolbar-font-color);
  flex-shrink: 0;
  height: 100%;
  display: flex;
  gap: 0.3em;
  flex-direction: column;
  background-image: linear-gradient(
    to right,
    rgb(120, 120, 120),
    var(--background-color)
  );
}
.sideToolBar * {
  margin-left: 0.2em;
  margin-right: 0.2em;
}
.sideToolBar [type="range"] {
  width: 23ch;
}
.toolBarInput {
  border: none;
  width: 6ch;
  color: var(--toolbar-font-color);
  outline-color: var(--toolbar-font-color);
  background-color: rgba(0, 0, 0, 0);
}

#stepControlDiv {
  display: flex;
  width: 19ch;
}
#stepControlDiv button {
  flex: 1 1;
}
.gridSearchSelect {
  width: 27ch;
  margin: 0 auto;
}

#toggleModeDiv {
  display: flex;
  flex-direction: column;
  row-gap: 0.3em;
  margin: 0.3em 0;
}

.toggleModeItem {
  display: inline;
  margin: 0 1ch;
  padding: 0 0.5ch;
  border-style: outset;
  cursor: pointer;
  background-color: rgb(100, 100, 100);
  width: 15ch;
  transition: filter 0ms;
  border-radius: 0.7em;
  text-align: center;
}

.activeToggleItem {
  border-style: inset;
  background-color: rgb(100, 100, 100);
  transition: filter 1000ms ease-out;
  filter: brightness(1.3);
}
.gridAnimationButtonContainer {
  display: flex;
  flex-shrink: 0;
  width: 19ch;
  overflow: hidden;
}
/**
GridPlane
**/
.gridPlaneWrapper {
  overflow: auto;
  flex-grow: 1;
  padding: 1em;
}
#gridPlane {
  display: grid;
  gap: var(--grid-gap);
  grid-template-columns: repeat(var(--col-nums), var(--block-size));
  grid-template-rows: repeat(var(--row-nums), var(--block-size));
  white-space: pre;
}

/**
GridBlock
**/
.gridBlockPath {
  background-color: var(--path-color);
  height: var(--block-size);
  width: var(--block-size);
  transition: max-height var(--animation-time) ease-in,
    max-width var(--animation-time) ease-in,
    transform var(--animation-time) ease-in;
  position: absolute;
}
.gridBlock {
  background-color: var(--block-color);
  width: var(--block-size);
  height: var(--block-size);
  border-style: solid;
  border-width: 1px;
  border-color: var(--border-color);
  font-size: var(--block-font-size);
  line-height: var(--block-line-height);
  position: relative;
  overflow: clip;
  display: grid;
  place-items: center;
}
.gridBlockChecked {
  transition: background-color calc(2 * var(--animation-time)) ease-out;
}
.gridBlockWall {
  background-color: var(--wall-color);
}

.gridBlock::before {
  content: "";
  background-color: var(--checked-color);
  width: var(--block-size);
  height: var(--block-size);
  max-width: 0%;
  max-height: 0%;
  transition: max-height var(--animation-time) ease-in,
    max-width var(--animation-time) ease-in;
}
.gridBlockChecked::before {
  transition: max-height var(--animation-time) ease-in,
    max-width var(--animation-time) ease-in;
  max-height: var(--block-size);
  max-width: var(--block-size);
}
.gridBlockTraveled::before {
  transition: max-height var(--animation-time) ease-in,
    max-width var(--animation-time) ease-in;
  max-height: 0%;
  max-width: 0%;
}
.gridBlockTraveled {
  background-color: var(--traveled-color);
}

.gridBlockOrigin {
  background-color: var(--origin-color);
}
.gridBlockMidWay {
  background-color: var(--midway-color);
}
.gridBlockEnd {
  background-color: var(--end-color);
}

/**
SearchNodePointer
**/

/**
SearchNodeList
**/
.searchNodeListContainer {
  overflow: auto;
  padding: 1em;
}
.searchNodeList {
  display: flex;
  flex-wrap: wrap;
  max-width: calc(50 * var(--search-node-size));
}
.searchPointerList {
  display: flex;
  height: fit-content;
}

/**
SearchNode
**/
.searchNode {
  outline: solid 1px;
  height: var(--search-node-size);
  width: var(--search-node-size);
  flex: 0 0 var(--search-node-size);
  display: grid;
  place-items: center;
}
.currentSearchNode {
  background-color: var(--traveled-color);
}
.checkedSearchNode {
  background-color: var(--end-color);
}
.validSearchNode {
  background-color: var(--origin-color);
}
